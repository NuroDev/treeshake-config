import { join } from "path";
import { generateConfigs } from "../dist";

enum Extension {
  JS = "js",
  TS = "ts",
  JSON = "json",
}

const extensionLangNames: {
  [E in Extension]: string;
} = {
  [Extension.JS]: "JavaScript",
  [Extension.TS]: "TypeScript",
  [Extension.JSON]: "JSON",
};

describe("Generate Config", () => {
  Object.entries(extensionLangNames).map(([extension, name]) => {
    it(`Valid (${name})`, async () => {
      const path = join(__dirname, "configs", `valid.config.${extension}`);
      const { jest } = await import(path);

      expect(await generateConfigs(path)).toEqual(
        expect.arrayContaining([
          expect.arrayContaining([
            "jest.config.js",
            `/**
* Warning! This file is autogenerated. Do not edit this file directly.
*/
module.exports = ${JSON.stringify(jest, null, 4)}\n`,
          ]),
        ])
      );
    });

    it(`Empty (${name})`, async () => {
      const path = join(__dirname, "configs", `empty.config.${extension}`);

      expect(await generateConfigs(path)).toEqual(expect.arrayContaining([]));
    });
  });
});
